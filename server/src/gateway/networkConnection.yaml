---
#
# The network connection profile provides client applications the information about the target
# blockchain network that are necessary for the applications to interact with it. These are all
# knowledge that must be acquired from out-of-band sources. This file provides such a source.
#
name: "dev"

#
# Any properties with an "x-" prefix will be treated as application-specific, exactly like how naming
# in HTTP headers or swagger properties work. The SDK will simply ignore these fields and leave
# them for the applications to process. This is a mechanism for different components of an application
# to exchange information that are not part of the standard schema described below. In particular,
# the "x-type" property with the "hlfv1" value example below is used by Hyperledger Composer to
# determine the type of Fabric networks (v0.6 vs. v1.0) it needs to work with.
#
x-type: "hlfv1"

#
# Describe what the target network is/does.
#
description: "The basic network"

#
# Schema version of the content. Used by the SDK to apply the corresponding parsing rules.
#
version: "1.0"

#
# [Optional]. But most apps would have this section so that channel objects can be constructed
# based on the content below. If an app is creating channels, then it likely will not need this
# section.
#
channels:
  # name of the channel
  testchannel:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("org1" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    orderers:
      - orderer.example.com

    # Required. list of peers from participating orgs
    peers:
      peer0.org1.example.com:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true

#
# list of participating organizations in this network
#
organizations:
  Org1MSP:
    mspid: Org1MSP
    peers:
      - peer0.org1.example.com

#
# List of orderers to send transaction and channel create/update requests to. For the time
# being only one orderer is needed. If more than one is defined, which one get used by the
# SDK is implementation specific. Consult each SDK's documentation for its handling of orderers.
#
orderers:
  orderer.example.com:
    url: grpcs://0.0.0.0:7050
    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    tlsCACerts:
      pem: |
        -----BEGIN CERTIFICATE-----
        MIICQzCCAemgAwIBAgIQVviXxBU/AAqayDye9LBNDjAKBggqhkjOPQQDAjBsMQsw
        CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy
        YW5jaXNjbzEUMBIGA1UEChMLZXhhbXBsZS5jb20xGjAYBgNVBAMTEXRsc2NhLmV4
        YW1wbGUuY29tMB4XDTIxMDQxMDA3MjEwMFoXDTMxMDQwODA3MjEwMFowbDELMAkG
        A1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBGcmFu
        Y2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRowGAYDVQQDExF0bHNjYS5leGFt
        cGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABOAZ3o0jkLwjyUvkHu+i
        W6iLA7+ff4cCcO4PS2edloye8ewU9LybBD4Mxwdl7wOskCxTsCkvC0NXqwPZ2E4c
        gR2jbTBrMA4GA1UdDwEB/wQEAwIBpjAdBgNVHSUEFjAUBggrBgEFBQcDAgYIKwYB
        BQUHAwEwDwYDVR0TAQH/BAUwAwEB/zApBgNVHQ4EIgQgLeul4/sHpiVzTB/XesCO
        EWUicS4HLeuPAeBJ/yWuUu8wCgYIKoZIzj0EAwIDSAAwRQIhAI8eMTKe25WimnLv
        sQ/Wv7JgrVFSiAK7ezkZF3zsSncCAiAF+0yJhgPLOuu0bO6HKnuZHkR2B86ijyL6
        ulFQR80AVw==
        -----END CERTIFICATE-----


    grpcOptions:
      ssl-target-name-override: orderer.example.com

#
# List of peers to send various requests to, including endorsement, query
# and event listener registration.
#
peers:
  peer0.org1.example.com:
    # this URL is used to send endorsement and query requests
    url: grpcs://0.0.0.0:7051
    "tlsCACerts":
      "pem": |
        -----BEGIN CERTIFICATE-----
        MIICVjCCAf2gAwIBAgIQFY2OtxLxzYiYvEsixIn2SjAKBggqhkjOPQQDAjB2MQsw
        CQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy
        YW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEfMB0GA1UEAxMWdGxz
        Y2Eub3JnMS5leGFtcGxlLmNvbTAeFw0yMTA0MTAwNzIxMDBaFw0zMTA0MDgwNzIx
        MDBaMHYxCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQH
        Ew1TYW4gRnJhbmNpc2NvMRkwFwYDVQQKExBvcmcxLmV4YW1wbGUuY29tMR8wHQYD
        VQQDExZ0bHNjYS5vcmcxLmV4YW1wbGUuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0D
        AQcDQgAE46LjDZC95qCG0dyDekYBJh9IGw6f4ThtwIe4zEmHXcSvIQIemEazske0
        lOcOti+lG+9sjjOp900QhMRGk5fgmKNtMGswDgYDVR0PAQH/BAQDAgGmMB0GA1Ud
        JQQWMBQGCCsGAQUFBwMCBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1Ud
        DgQiBCBwpBzcnjWvEmKH1P0HgR4Kx1+VBvq0xXK//h00LnP5+zAKBggqhkjOPQQD
        AgNHADBEAiBGU7fY0osdH+TDU4lRt4HuvaAUavJ0DdkDzXmLTHUFowIgbwMTKgxF
        LISFLQvCKe/1PkbemjsWLAI8fO/UEsM2U7E=
        -----END CERTIFICATE-----

    grpcOptions:
      ssl-target-name-override: peer0.org1.example.com
      request-timeout: 120001

# Fabric-CA is a special kind of Certificate Authority provided by Hyperledger Fabric which allows
# certificate management to be done via REST APIs. Application may choose to use a standard
# Certificate Authority instead of Fabric-CA, in which case this section would not be specified.
#
certificateAuthorities:
  ca-org1:
    url: http://0.0.0.0:7054
    # the properties specified under this object are passed to the 'http' client verbatim when
    # making the request to the Fabric-CA server
    httpOptions:
      verify: false

    # Fabric-CA supports dynamic user enrollment via REST APIs. A "root" user, a.k.a registrar, is
    # needed to enroll and invoke new users.
    registrar:
      - enrollId: admin
        enrollSecret: password
